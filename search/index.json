[{"content":"Using Latex on macOS Download MacTex (~3/4 GB with most packages included), via homebrew, support for Apple Silicon\nGuide I followed mostly VSCODE CONFIG LATEX (MAC), which is quite comprehensive and easy to follow.\nThe only adjustment I need is the directory for skim location /opt/homebrew/bin/ if installed via homebrew.\nAlso don\u0026rsquo;t delete syntex.gz file as it\u0026rsquo;s required for bi-directional jumping between VSCode and Skim.\n// latex \u0026#34;latex-workshop.view.pdf.viewer\u0026#34;: \u0026#34;external\u0026#34;, \u0026#34;latex-workshop.view.pdf.external.viewer.command\u0026#34;: \u0026#34;/opt/homebrew/bin/displayline\u0026#34;, \u0026#34;latex-workshop.view.pdf.external.viewer.args\u0026#34;: [ \u0026#34;0\u0026#34;, \u0026#34;%PDF%\u0026#34; ], \u0026#34;latex-workshop.view.pdf.external.synctex.command\u0026#34;: \u0026#34;/opt/homebrew/bin/displayline\u0026#34;, \u0026#34;latex-workshop.view.pdf.external.synctex.args\u0026#34;: [ \u0026#34;-r\u0026#34;, \u0026#34;%LINE%\u0026#34;, \u0026#34;%PDF%\u0026#34;, \u0026#34;%TEX%\u0026#34; ], \u0026#34;latex-workshop.latex.clean.fileTypes\u0026#34;: [ \u0026#34;*.aux\u0026#34;, \u0026#34;*.bbl\u0026#34;, \u0026#34;*.blg\u0026#34;, \u0026#34;*.idx\u0026#34;, \u0026#34;*.ind\u0026#34;, \u0026#34;*.lof\u0026#34;, \u0026#34;*.lot\u0026#34;, \u0026#34;*.out\u0026#34;, \u0026#34;*.toc\u0026#34;, \u0026#34;*.acn\u0026#34;, \u0026#34;*.acr\u0026#34;, \u0026#34;*.alg\u0026#34;, \u0026#34;*.glg\u0026#34;, \u0026#34;*.glo\u0026#34;, \u0026#34;*.gls\u0026#34;, \u0026#34;*.ist\u0026#34;, \u0026#34;*.fls\u0026#34;, \u0026#34;*.log\u0026#34;, \u0026#34;*.fdb_latexmk\u0026#34;, \u0026#34;*.snm\u0026#34;, \u0026#34;*.nav\u0026#34; ], ","date":"2022-06-02T15:32:31+03:00","permalink":"https://wyq977.github.io/p/vscode-latex-mac/","title":"VSCode Latex Mac"},{"content":"There\u0026rsquo;s this annoying feature on macOS that would lower the media volume when you are on a call or Facetime which appears in Wechat, Facetime or Skype. Basically, you can\u0026rsquo;t listen to YT when you are on a call.\nTo avoid that, Wechat-AntiDuck comes to help.\nFix \u0026ldquo;No permission to open\u0026rdquo; sudo codesign --force --deep --sign - \u0026#34;/Applications/WeChat.app\u0026#34; This doesn\u0026rsquo;t work with the following warning.\n/Applications/WeChat.app: the codesign_allocate helper tool cannot be found or used Tried re-installing the homebrew version, no luck. Tried installing the app store version, still no luck.\nTried following this guide: https://stackoverflow.com/questions/29848622/codesign-allocate-error-unable-to-find-utility-codesign-allocate-not-a-deve, still doesn\u0026rsquo;t work\nAccording to this discussion, I just copied the app to another folder, signed it and then replaced it with the one in /Applications\nIt\u0026rsquo;s a known bug in the codesign tool. To work around it, make a copy of your modified executable, sign the copy, then replace the original executable with the signed copy and it should work.\nFor more details, see here.\n","date":"2022-05-13T13:30:58+02:00","permalink":"https://wyq977.github.io/p/wechat-antiduck/","title":"Wechat AntiDuck"},{"content":"Problems Miniforge installed via homebrew will remove all the env upon update/uninstall, discussion.\nSolution Specify conda env in condarc\ncondarc example: https://docs.conda.io/projects/conda/en/latest/user-guide/configuration/sample-condarc.html\ntouch ~/.condarc mkdir ~/.conda-envs envs_dirs: - ~/.conda-envs ","date":"2022-04-03T09:00:36+02:00","permalink":"https://wyq977.github.io/p/conda-homebrew/","title":"Conda Homebrew"},{"content":"Yet Again, Docker macOS After using the official Docker for Mac for a while, it became clear to me that the app is not yet stable and reliable enough to be used for professional use case in the background nor user-friendly, ready-to-go like a actual desktop mac app.\nI toned down the setting and limiting the CPU to 2 cores with 4/3(?)GB RAM, and I also checked the box for using the new release virtualization framework in Experimental feature. However, the ram usage would still be going thr the limits and lagging, breakdown is also often seen. Eating roughly 4GB of RAM and I have seen errors where it said it used 30G but probably swap usage along with crashes\u0026hellip;\nAs under the hook, the Docker for Mac still basically created a Linux VM, kind of like podman. The underlying performance issues might be the way the VM is regulated/managed. So, why not just create a VM and use docker cli or simply ssh to the linux instance?\nThere are a bit headaches and issues with Docker on macOS.\nIO has always been a really big issue, causing really slow build and even slow git for bigger project. I never tested on new build now. Volume mounting. Although creating your own VM will also lead to a plate of problmes such as network device/video device/volume storage mounting. But those issues are also persistant on macOS app. After all its not linux.\nPerfomance issues The article caught my eyes as it compares docker build time on Intel/Apple Silicon Macs with different hyperviser.\nTest Results The Table said it all, whatever it is, the Docker for Mac makes it hard for macOS to deliver the performance it is capable of. And that last line is the one I am interested.\ndevice/volume mounting issue For me, personally, theres a need to use the volume in Docker and that volume is not one M1\u0026rsquo;s SSD but on another network device mounted on macOS via SMB/CIFS.\nIt was slow on macOS itself and it will probably take a bigger blow with all that connection protocol added on top of that with introducing VM. So I am curious about how it went going forward.\nActual set up A detailed post on setting up UTM VM with Docker on macOS\nFirst, install UTM, a free and open source VM tool built only for macOS.\nA minial debian build Debian 10.4 were used for installing Docker, in theory, more trimming can be done to reduce the overhead on that instance.\nRemeber to change root user(root/password) and default user(debian/debian): sudo passwd root sudo passwd debian Update and install essential: SSH Some problems with apt-get update: https://stackoverflow.com/questions/68802802/repository-http-security-debian-org-debian-security-buster-updates-inrelease\nsudo apt-get update -y \u0026amp;\u0026amp; sudo apt-get install openssl-server # check sudo systemctl status ssh This confirms the SSH server is running and listening on port 22. If you need more help with that, PhoenixNap has a great tutorial on How to Enable SSH on Debian.\nInstall Docker on Debian 10.4 VM Follow: https://phoenixnap.com/kb/how-to-install-docker-on-debian-10\nChange amd64 to arm64\n# Step 1: Uninstall Default Docker Packages sudo apt-get purge docker lxc-docker docker-engine docker.io # Step 2: Install Required Packages # Update the default repository with the command: sudo apt-get update # Download the following dependencies: sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common # Step 3: Install Docker # Method 1 # 1. Download Docker’s official GPG key to verify the integrity of packages before installing: curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - # 2. Add the Docker repository to your system repository with the following command: sudo add-apt-repository \u0026#34;deb [arch=arm64] https://download.docker.com/linux/debian buster stable\u0026#34; # 3. Update the apt repository: sudo apt-get update # 4. Install Docker Engine – Community (the latest version of Docker) and containerd: sudo apt-get install docker-ce docker-ce-cli containerd.io # 5. The service will start automatically after the installation. Check the status by typing: sudo systemctl status docker # check if docker works docker -v Config macos Docker CLI to use VM\u0026rsquo;s Docker Enginer # this should returns nothing/empty output ssh debian@127.0.0.1 -p 22022 -N -L/tmp/docker-on-debian.sock:/var/run/docker.sock ssh://debian@127.0.0.1 # set up DOCKER_HOST location export DOCKER_HOST=unix:///tmp/docker-on-debian.sock We’ll get “permission denied” when trying to use the Docker CLI from macOS. This is because the debian user doesn’t have permissions to use Docker without using sudo. To fix this, on the Debian VM, we’ll run the following command to add the debian user to the docker user group:\nsudo usermod -aG docker $USER Now the Docker CLI will connect to the Debian VM instead. We will confirm this by running docker system info | grep System from the macOS terminal to see that the operating system is Debian, not Darwin or macOS:\nWorking!\n$ docker system info Client: Context: default Debug Mode: false Server: Containers: 0 Running: 0 Paused: 0 Stopped: 0 Images: 0 Server Version: 20.10.12 Storage Driver: overlay2 Backing Filesystem: extfs Supports d_type: true Native Overlay Diff: true userxattr: false Logging Driver: json-file Cgroup Driver: cgroupfs Cgroup Version: 1 Plugins: Volume: local Network: bridge host ipvlan macvlan null overlay Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog Swarm: inactive Runtimes: runc io.containerd.runc.v2 io.containerd.runtime.v1.linux Default Runtime: runc Init Binary: docker-init containerd version: 7b11cfaabd73bb80907dd23182b9347b4245eb5d runc version: v1.0.2-0-g52b36a2 init version: de40ad0 Security Options: apparmor seccomp Profile: default Kernel Version: 4.19.0-9-arm64 Operating System: Debian GNU/Linux 10 (buster) OSType: linux Architecture: aarch64 CPUs: 8 Total Memory: 1.45GiB Name: debian ID: R5BA:KFRQ:37TY:VCYD:HPVW:NTVN:2F5L:RS4S:GLNT:CXCX:6RUJ:C6U6 Docker Root Dir: /var/lib/docker Debug Mode: false Registry: https://index.docker.io/v1/ Labels: Experimental: false Insecure Registries: 127.0.0.0/8 Live Restore Enabled: false WARNING: No swap limit support Problems with UTM UI still freezes from time to time when I tried to resize/config the image. Thats annoying af. Problems with porting: It seems to I have to keep this ssh activa without CTRL+C\n$ ssh debian@127.0.0.1 -p 22022 -N -L/tmp/docker-on-debian.sock:/var/run/docker.sock ssh://debian@127.0.0.1 After I stopped, I need to remove sock and re-do the whole thing.\nSolution: treat the VM as remote host and modify DOCKER_HOST, ssh create a private key and adds it to VM.\nexport DOCKER_HOST=\u0026#34;ssh://debian@127.0.0.1:22022\u0026#34; CPU Benchmark (1000 difference with native sysbench) Another post benchmark cpu using sysbench\nWith a threads=2, I got 105585 in ubuntu docker\ndocker run -it --rm ubuntu apt-get update \u0026amp;\u0026amp; apt-get install sysbench sysbench cpu --threads=2 run #### ubuntu docker (arm) on 1.5 GB ram Debian VM by UTM CPU speed: events per second: 21115.40 #### UTM Debian 10.4 CPU speed: events per second: 21082.14 #### macos native CPU speed: events per second: 25912346.76 #### macos Intel Core i5 - 10210U CPU speed: events per second: 8372004.44 #### ubuntu on intel (Docker 4 CPUs 8 GB RAM swap 2 GB) # docker -v # Docker version 20.10.11, build dea9396 CPU speed: events per second: 2526.18 WTF, why is VM takes such a dramatic hit, even with the right tool. I might ended up using the Sonarr/Radarr for macOS, 4.0.0 of Radarr already has osx-arm64 build, just waiting for Sonarr.\nAnd yes, the QEMU used by UTM would still eat up about 2.3 GB RAM\n","date":"2022-01-05T10:48:47+01:00","permalink":"https://wyq977.github.io/p/docker-m1-mac/","title":"Docker M1 Mac"},{"content":"Quality for video downloads Ref: https://wiki.servarr.com/sonarr/settings#qualities-defined\nIn brief: Remux == Bluray \u0026gt; WEBDL \u0026gt; WEBRip \u0026gt; HDTV\nSummary:\nWEBDL: losslessly ripped from streaming like NF, AMZN, HULU or iTunes. Quality is quite good since they are not reencoded. The video (H.264 or H.265) and audio (AC3/AAC) streams are usually extracted from the iTunes or Amazon Video and remuxed into a MKV container without sacrificing quality. WEBRip: the file is often extracted using the HLS or RTMP/E protocols and remuxed from a TS, MP4 or FLV container to MKV. Usually WEB-DL is better Bluray: A re-encode of the final released Blu-ray Remux: a rip of a Blu-ray or HD DVD disc to another container format or just stripping the disc of menus and bonus material while keeping the contents of its audio and video streams intact (also keeping the current codecs), guaranteeing the exact 1:1 movie quality as on original disc. HDTV: A re-encode of the final released Blu-ray, but broadcast over HD cable or satellite. This is released usually several months after a retail release, but sometimes upscaled versions of a Standard Definition film are released on cable channels such as STARZ or HBO, and they would be the only HD copies of that specific film available. These are generally MKV or MP4 container. Quality: High -\u0026gt; Low\n2160p Remux-2160p, Bluray-2160p, WEBRip-2160p, WEBDL-2160p 1080p Remux-1080p, Bluray-1080p, WEBRip-1080p, WEBDL-1080p, HDTV-1080p 720p Bluray-720p, WEBRip-720p, HDTV-720p 480p or lower DVD, WEBRip-480p, WEBDL-480p Info. about media files MKV or MP4: just a container, does not really say a lot about quality, can be converted with ffmepg or mkvtoolnix\nTS: video format is a container format for MPEG, known as \u0026ldquo;Transport Stream\u0026rdquo;, which is used most frequently by digital broadcasting systems (digital cable, satellite, etc). ref\n","date":"2021-10-03T16:25:14+02:00","permalink":"https://wyq977.github.io/p/video-stuff/","title":"Video Stuff"},{"content":"Install brew install aria2 YAAW, aria2 frontend for chrome Install Tampermonkey fake115, open raw link of this file fake115d.user.js, should auto redirect to Tampermonkey 115, download release, change crx to zip, drag it in Extensions in Chrome Aria2 config Help: https://developpaper.com/how-to-configure-aria2-to-download-files/\nYYAW config Set the RPC like this:\nhttp://token:TOKEN@localhost:6800/jsonrpc Run aria2 in background on startup TBD\nConvert rmvb to mp4 See: https://gist.github.com/jamesmacwhite/58aebfe4a82bb8d645a797a1ba975132\nfor f in *.rmvb; do ffmpeg -i \u0026#34;$f\u0026#34; -c:a copy -acodec copy \u0026#34;${f%}.mp4\u0026#34;; done # use filename only for f in *.rmvb; do ffmpeg -i \u0026#34;$f\u0026#34; -c:a copy -acodec copy -map_metadata -1 -map 0 \u0026#34;${f%%.rmvb}.mp4\u0026#34;; done Remove all metadata along the way:\nffmpeg -i in.mkv -map_metadata -1 -c copy -map 0 out.mkv for f in *.mp4; do ffmpeg -i \u0026#34;$f\u0026#34; -map_metadata -1 -c copy -map 0 \u0026#34;${f%}.nometa.mp4\u0026#34;; done # do for loop ","date":"2021-09-29T15:45:07+02:00","permalink":"https://wyq977.github.io/p/set-up-aria2-and-chrome-working-nicely-together/","title":"Set up Aria2 and Chrome working nicely together"},{"content":"Install xQuartz If homebrew installed:\nbrew install --cask xquartz Or install from XQuartz website\nRestart the machine\nEnable iglx Euler X11 macOS Euler X11 macOS troubleshooting extra help link defaults write org.macosforge.xquartz.X11 enable_iglx -bool true According to this discussion here, but might not be relevant\n# check before writing defaults read com.apple.x11 nolisten_tcp defaults read org.X.x11 nolisten_tcp defaults write com.apple.x11 nolisten_tcp -boolean false defaults write org.X.x11 nolisten_tcp -boolean false To validate:\nprintenv DISPLAY # /private/tmp/com.apple.launchd.oyK9GxAmbh/org.macosforge.xquartz:0 SSH config locate your config file, mine is at ~/.ssh/config\nHost euler.ethz.ch HostName euler.ethz.ch User USERNAME ForwardX11Trusted yes ForwardX11 yes # XAuthLocation /opt/X11/bin/xauth # not required Connect \u0026amp; Debug ssh -Y USERNAME@euler.ethz.ch # debug ssh -v -Y USERNAME@euler.ethz.ch # check for # debug1: Requesting X11 forwarding with authentication spoofing. # validate printenv DISPLAY # localhost:10.0 display random.png # show up in the XQuartz window Note Noted that this might conflict with some plotting software like R, matplotlib in python,\nIf so, one can switch to headless mode and view\n","date":"2020-12-31T11:42:32+01:00","permalink":"https://wyq977.github.io/p/x11-forwarding-on-macos/","title":"x11 forwarding on macOS"},{"content":"Motivation Came across this signing in dotfiles and I would also want to have the verified in each commit I made in my pc so why not?\nHow-to Install GPG Suite as it allows storing in macOS keychain, without typing each time brew install --cask gpg-suite Don\u0026rsquo;t install gpg or pinentry-mac as it might cause conflict and also can not be stored in keychain Create a key either from CLI or in GPG Keychain app Noted the name and email should be the same as the git configure Specify location for git In ~/.gitconfig.local: modify as below Adding a new GPG key to your GitHub account [commit] # Sign commits using GPG. # https://help.github.com/articles/signing-commits-using-gpg/ gpgsign = true [user] name = email = signingkey = # signkey # See https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/telling-git-about-your-signing-key # Tell git about gpg path # https://gist.github.com/danieleggert/b029d44d4a54b328c0bac65d46ba4c65 # https://github.com/pstadler/keybase-gpg-github [gpg] program = /usr/local/MacGPG2/bin/gpg2 Keep your email private At this point, the emails I used have already been in so many projects and repo and its just a fact that this email is already \u0026ldquo;exposed\u0026rdquo;.\nYou can check, see a post\n# You can clone any of your favorite repository/library git clone https://github.com/stretchr/testify \u0026amp;\u0026amp; cd testify git log --format=email --abbrev-commit | grep -i mail | sort -u The things and steps are pretty much just the same as the post but there\u0026rsquo;s one thing worth mentioning.\nIn the email setting in Github, a masked email address will be generated with a format: NUMBER+username@github.noreply.github.com. But username@github.noreply.github.com is the one to input in GPG key, the one with a number prefix is not gonna verfy the commits and github will show errors like \u0026ldquo;No githuub user associated with the email\u0026rdquo;\nHow to add email to gpg key\n","date":"2020-12-31T09:41:52+01:00","permalink":"https://wyq977.github.io/p/sign-with-gpg/","title":"Sign With GPG"},{"content":"Mostly based on 流水账：如何使用 annie 批量下载优酷 VIP 视频\nusing annie, ffmpeg\nBoth of them can be installed on macOS via homebrew\nbrew install annie brew install ffmpeg Get cookies In console (Dev. Tools): document.cookie Or you can use EditThisCookie to get cookie of a vip account Get url Copy each episode or follow the guide, grap href using online tools:http://tools.buzzstream.com/link-building-extract-urls\nIt might be easier for a few episodes to just copy and paste\nDownload # check info annie -i -f fhd -c qqvip.txt -F s01.csv # download fhd if present annie -f fhd -c qqvip.txt -F s01.csv Extra Most of the time is from connection and the actual download time is quite fast.\n","date":"2020-12-18T18:29:33+01:00","permalink":"https://wyq977.github.io/p/download-qq-videos/","title":"Download qq videos"},{"content":"Copied from example site\nTest for a single post created by hugo new post/my-first-post.md\nTest for emoji support 😄 😄\nNot supported in the title yet so one has to edit the layout on the theme stackoverflow, too much trouble\u0026hellip;\nMath is still not perfect $$ f(x) = e^x $$\nMultiple-line does not render nicely with KaTex now\n$$ \\begin{align} y \u0026amp;=\u0026amp; 1+1 \\\\\\\\\\\\ \u0026amp;=\u0026amp; 2 \\end{align} $$ $$ % This works as expected in KaTeX \\begin{aligned} a \u0026amp;= 1 \\\\ b \u0026amp;= 2 \\end{aligned} $$ $$ \\begin{align} y \u0026amp;=\u0026amp; 1+1 \\\\\\ \u0026amp;=\u0026amp; 2 \\end{align} $$\n$$ % This works as expected in KaTeX \\begin{aligned} a \u0026amp;= 1 \\ b \u0026amp;= 2 \\end{aligned} $$\n图片 Photo by Florian Klauer on Unsplash Photo by Luca Bravo on Unsplash Photo by Helena Hertz on Unsplash Photo by Hudai Gayiran on Unsplash ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode Twitter Simple Shortcode Hugo 0.24 Released: Big archetype update + @Netlify _redirects etc. file supporthttps://t.co/X94FmYDEZJ #gohugo #golang @spf13 @bepsays\n\u0026mdash; GoHugo.io (@GoHugoIO) June 21, 2017 Vimeo Simple Shortcode Bilibili #97 ","date":"2020-12-17T22:55:41+01:00","image":"https://wyq977.github.io/p/test-for-blog-but-no-emoji-in-title/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_120x120_fill_q75_box_smart1.jpg","permalink":"https://wyq977.github.io/p/test-for-blog-but-no-emoji-in-title/","title":"Test for blog but no emoji in title :("},{"content":"See the PCPartPicker Part List for detailed list including the history\nBuild (2019-03-12) Type Item Price(CHF) Price (CNY)* CPU AMD Ryzen 5 2600 3.4 GHz 6-Core Processor 187 1243.55 CPU Cooler Noctua NH-L9x65 SE-AM4 CPU Cooler 59 392.35 Motherboard MSI B450I GAMING PLUS AC Mini ITX AM4 Motherboard 131 871.15 Memory Corsair Vengeance LPX 16 GB (2 x 8 GB) DDR4-3000 CL15 Memory 130 864.5 Storage Samsung 970 Evo Plus 1 TB M.2-2280 NVME Solid State Drive 238.35 1585.0275 Video Card MSI Radeon RX 580 8 GB ARMOR OC Video Card 216.96 1442.784 Case Louqe GHOST S1 - Pangea 297.85 1980.7025 Power Supply Corsair SF 600 W 80+ Gold Certified Fully Modular SFX Power Supply 90.75 603.4875 Monitor Dell U2515H 25.0\u0026quot; 2560x1440 60 Hz Monitor N/A N/A Monitor Dell U2715H 27.0\u0026quot; 2560x1440 60 Hz Monitor 399 2653.35 Total CNY are calculated at 2019-03-12 1749.91 11636.9015 Generated by PCPartPicker 2020-12-18 12:49 EST-0500 Update (sell) 2022-01-12: ✅ 68 CHF for PC Case Phanteks Eclipse P400A ATX Midi Tower on tutti 2021-03-18: ✅ 88 CHF for Samsung 970 on Facebook 2021-03-16: ✅ 38.7 CHF for Glorious PC Gaming Race model D on digitec 2021-03-15: ✅ 43 CHF for Corsair Vengeance LPX 16 GB on digitec 2021-03-15: ✅ 207.2 CHF for MSI RX580 8gb on Ricardo 2020-09-29: ✅ 45 CHF for Corsair PSU on tutti 2020-09-25: ✅ 210 CHF for Louqe S1 + custom PSU cable on tutti 2020-09-01: ✅ 200 CHF for MSI B450I Gaming Plus AC + Noctua NH-L9x65 SE-AM4 + AMD Ryzen 5 2600 on tutti Update (buy) 2020-09-26: ❌ 24.8 CHF for Microsoft 600 Englishg on digitec 2020-10-18: ❌ 68 CHF for MX Master 3 on Ricardo 2020-09-26: ❌ 126 CHF for Seasonic Focus GX (850W) on digitec 2020-09-23: ❌ 80 CHF for Phanteks Eclipse P400A (Midi Tower) on digitec 2020-09-23: ❌ 16 CHF for Gehäuselüfter Noctua 120 mm on Ricardo 2020-09-01: ❌ 123 CHF ASUS ROG Strix H370-I digitec 2020-09-01: ❌ 61.4 CHF Intel i3 8100 Interdiscount 2020-07-30: ❌ 52.21 CHF Glorious PC Gaming Race model D (Cable) digitec ","date":"2019-12-18T18:47:22+01:00","permalink":"https://wyq977.github.io/p/itx-build/","title":"itx Build"},{"content":"​1. Stay connected with ETH (VPN) See wiki for detailed info. but the bottom line is that you have to stay connected all the time and this can be troublesome in linux or mobile devices.\n​2. Login (SSH) It\u0026rsquo;s easier to use the ssh key for login on laptop or PC at home (how).\nOtherwise, you should be able to login with the ETH passwords.\n2.1 File transfer See here for details but this should do the job for small files.\nTo copy a file from Bto A while logged into B: scp /path/to/file username@a:/path/to/destination To copy a file from Bto A while logged into A: scp username@b:/path/to/file /path/to/destination ​## 3. Writing code\n3.1 jupyter notebook See: https://gitlab.ethz.ch/sfux/Jupyter-on-Euler-or-Leonhard-Open\nIt\u0026rsquo;s quite time-consuming and clumsy for set up. Not recommended.\nOne liner if have cloned the above repo:\nEuler ./start_jupyter_nb.sh Euler USERNAME 4 04:00 1024 Leonhard Open ./start_jupyter_nb.sh LeoOpen USERNAME 4 04:00 1024 3.2 VS Code Remote (DO NOT USE!!!) Stop using this since it will overload the single node on Euler for some reasons\nSee here for instructions, have to login each time with new folder, download appropriate extensions and set up ENVvariables.\nBut this is still the way to go as far as I am concern. Unless the black CLI interface works better for you.\n3.3 CLI Good old ways of coding with Vim or nano (installed needed)\n​4. Batch system 4.1 Module for environments Details\nOne can also write this in ~/.bash_rc to load the modules needed every-time before login, but not recommended by Euler since the module will affect the batch system when submitting jobs\nCommon ones:\nlist current loaded modules files module list unload allcurrently loaded modules module purge unloadworks similarly with load python 3.7.1 module load new gcc/4.8.2 python/3.6.1 python 3.6.1 module load new gcc/4.8.2 python/3.6.1 R 3.6.0 module load new gcc/4.8.2 r/3.6.0 Extra info. for python packages\nPackages can be installed in a per-user basis using pip install --user packagedetails here\n4.2 Batch job submission Job monitoring (more)\nReal time output bpeek JOBID bpeek -J JOBNAME kill a job bkill JOBID****kill all bkill 0 Check all jobs bjobs(-pfor pending jobs only) Job submission(more)\nAfter loading modules files, -nspecify number of cores requested, notify you by e-mail when your job begins and ends using bsub -Band bsub -Nrespectively\nExample:\nbsub -B -N -n 4 -W 120 -R \u0026#34;rusage[mem=2048]\u0026#34; -o output.txt python main.py bsub -B -N -n 4 -W 120 -o output.txt python main.py ","date":"2019-12-18T18:47:22+01:00","permalink":"https://wyq977.github.io/p/using-eth-cluster/","title":"Using ETH Cluster"},{"content":"conda env conda create -n taichi python=3.8 Install Dependencies See best practice using pip in a conda\nconda activate taichi python3 -m pip install setuptools astor pybind11 pylint # sourceinspect python3 -m pip install pytest pytest-rerunfailures pytest-xdist yapf python3 -m pip install GitPython coverage colorama # autograd # install pypi packages with no whl avaiable for Apple Arm64 python3 -m pip install numpy autograd sourceinspect --compile --pre Build LLVM 10.0.0 from source wget https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/llvm-10.0.0.src.tar.xz tar xvJf llvm-10.0.0.src.tar.xz cd llvm-10.0.0.src mkdir build cd build # install to specific location # https://llvm.org/docs/CMake.html cmake .. \\ -DLLVM_ENABLE_RTTI:BOOL=ON \\ -DBUILD_SHARED_LIBS:BOOL=OFF \\ -DCMAKE_BUILD_TYPE=Release \\ -DLLVM_TARGETS_TO_BUILD=\u0026#34;AArch64\u0026#34; \\ -DLLVM_ENABLE_ASSERTIONS=ON \\ -DCMAKE_INSTALL_PREFIX=/Users/wyq977/projects/llvm-install/10.0.0 make -j 8 make install # Check your LLVM installation # You should get 10.0.0 llvm-config --version Build Taichi Installing collected packages: numpy WARNING: The scripts f2py, f2py3 and f2py3.8 are installed in \u0026lsquo;/Users/wyq977/.local/bin\u0026rsquo; which is not on PATH. Consider adding this directory to PATH or, if you prefer to suppress this warning, use \u0026ndash;no-warn-script-location. Successfully installed numpy-1.20.2\nastor sourceinspect pytest-rerunfailures pytest-xdist yapf GitPython coverage colorama autograd\n721 brew install cmake 723 cmake \u0026ndash;version 724 cmake .. 726 cmake .. 746 cmake .. 747 cmake .. -DTI_WITH_CUDA=OFF -DTI_WITH_OPENGL=OFF -DTI_WITH_CC=OFF 763 cd cmake/\ncmake .. -DTI_WITH_CUDA=OFF -DTI_WITH_OPENGL=OFF -DTI_WITH_CC=OFF -DLLVM_TARGETS_TO_BUILD=\u0026#34;AArch64\u0026#34; LLVM (build from source) wget https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/llvm-10.0.0.src.tar.xz tar xvJf llvm-10.0.0.src.tar.xz cd llvm-10.0.0.src mkdir build cd build cmake .. -DLLVM_ENABLE_RTTI:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=\u0026#34;AArch64\u0026#34; -DLLVM_ENABLE_ASSERTIONS=ON make -j 8 # install llvm in custom dir instead of / make DESTDIR=~/Downloads/llvm-install/ install # add this to bash_profile # export PATH=\u0026#34;/Users/wyq977/Downloads/llvm-install/usr/local/bin:$PATH\u0026#34; # export LLVM_DIR=\u0026#34;/Users/wyq977/Downloads/llvm-install/usr/local/lib/cmake\u0026#34; # Check your LLVM installation llvm-config --version # You should get 10.0.0 Uninstall Make a CMake target: https://gitlab.kitware.com/cmake/community/-/wikis/FAQ#can-i-do-make-uninstall-with-cmake remove all build target: cd build \u0026amp;\u0026amp; xargs rm \u0026lt; install_manifest.txt Unset all env var unset TAICHI_REPO_DIR unset LLVM_DIR ","date":"0001-01-01T00:00:00Z","permalink":"https://wyq977.github.io/p/taichi-installation-for-apple-silicon/","title":"Taichi installation for Apple Silicon"}]